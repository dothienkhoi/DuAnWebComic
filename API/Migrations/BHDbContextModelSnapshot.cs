// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(BHDbContext))]
    partial class BHDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebsiteBanHang.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WebsiteBanHang.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("WebsiteBanHang.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Description = "Superman vs. Spider-Man? Batman vs. Captain America? The X-Men meeting the Teen Titans?",
                            ImageUrl = "/Images/Comic/Book/Dc Versus Marvel Omnibus.jpg",
                            Name = "Dc Versus Marvel Omnibus",
                            Price = 125m,
                            Qty = 10
                        });
                });

            modelBuilder.Entity("WebsiteBanHang.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Electronic"
                        });
                });

            modelBuilder.Entity("WebsiteBanHang.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "a"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "b"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
